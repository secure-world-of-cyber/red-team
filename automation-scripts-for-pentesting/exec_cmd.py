import socket
import threading
import subprocess
import time


server_ip = "127.0.0.1"
port = 1234

# The client socket method that will handle the socket client after connected on the socket server.
def client_handler(client_socket):
    #data = client_socket.recv(1024)

    client_socket.send("****** Welcome ******\n\n\n".encode())

    while True:
        data = client_socket.recv(1024)

        cmd = data.decode("utf-8")
        if data:
            
         output,error = subprocess.Popen(cmd,shell=True,stdout=subprocess.PIPE).communicate()

         if error:
             
             client_socket.sendall(error)

         else:    

           client_socket.sendall(output)    


# The server socket that will listen for incomming connections from socket clients
def server_socket_function():    

    server_socket = socket.socket(socket.AF_INET,socket.SOCK_STREAM)

    server_socket.bind((server_ip,port))

    server_socket.listen(5)

    print(f'[*] Listening on {server_ip}:{port}')

    while True:
        client_socket, client_address = server_socket.accept()

        print(f'[*] Received connection from {client_address[0]}:{client_address[1]}')

        threading.Thread(target=client_handler,args=(client_socket,)).start()


# The client socket function that will communicate with the socket TCP server.
def client_socket_function():
    
    client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    client.connect((server_ip,port))

    print("[***]DÃ©marrage de la conversation ...\n\n\n")

    while True:
       data = client.recv(4096)
       if data:
          print(data.decode())

       request = input("$")

       client.send(request.encode())


def main():

    print("Do you want to run the socket TCP Server or the socket Client that will communicate with the TCP server ?")
    
    response = input("Type 1 if you want to run the client or 2 if you want to run the TCP Server: ")

    while response not in ["1","2"]:

        response = input("Choose 1 to run the Client OR 2 to run the Server: ")

    if response == "1":
        client_socket_function()
    else:
        server_socket_function()


if __name__ == "__main__":

    main()        

